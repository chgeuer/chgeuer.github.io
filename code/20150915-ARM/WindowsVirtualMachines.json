{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "defaultValue": "scaleadmin",
      "metadata": { "description": "Admin user name for the Virtual Machines." }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": { "description": "Admin password for the Virtual Machines." }
    },
    "deploymentName": {
      "type": "string",
      "defaultValue": "scaledemo6",
      "metadata": { "description": "Prefix for all names like storage accounts, etc." }
    },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
      }
    }
  },
  "variables": {
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "OSDiskName": "osdiskforwindowssimple",
    "vnetname": "[concat(parameters('deploymentName'),'-vnet')]",
    "storageAccountNamePrefix": "[toLower(replace(parameters('deploymentName'),'-',''))]",
    "storageAccountNames": {
      "frontend": "[concat(variables('storageAccountNamePrefix'), 'sd')]"
    },
    "instanceCount": {
      "frontend": 4
    },
    "math": {
      "modulo2": [ "0", "1", "0", "1", "0", "1", "0", "1", "0", "1", "0", "1", "0", "1", "0", "1", "0", "1", "0", "1", "0", "1", "0", "1", "0", "1", "0", "1", "0", "1", "0", "1", "0", "1", "0", "1" ],
      "modulo3": [ "0", "1", "2", "0", "1", "2", "0", "1", "2", "0", "1", "2", "0", "1", "2", "0", "1", "2", "0", "1", "2", "0", "1", "2", "0", "1", "2", "0", "1", "2", "0", "1", "2", "0", "1", "2" ]
    }
  },
  "resources": [

    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "name": "[variables('vnetname')]",
      "tags": { "displayName": "Virtual Network" },
      "properties": {
        "addressSpace": { "addressPrefixes": [ "10.0.0.0/16" ] },
        "subnets": [
          {
            "name": "subnet-sd",
            "properties": { "addressPrefix": "10.0.0.0/24" }
          }
        ]
      }
    },

    {
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "name": "availabilityset-sd",
      "tags": { "displayName": "Availability Set Frontend" }
    },

    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "name": "[concat('nic-sd-', copyIndex())]",
      "tags": { "displayName": "Scale Demo - Network Interface Cards" },
      "copy": {
        "name": "scaleDemoNicCopy",
        "count": "[variables('instanceCount').frontend]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetname'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat('ipconfig-sd-', copyIndex())]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat('10.0.0.', copyIndex(10))]",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks',variables('vnetname')), '/subnets/', 'subnet-sd')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "name": "[concat('sd', '-', copyIndex())]",
      "tags": { "displayName": "Scale Demo - Virtual Machines" },
      "copy": {
        "name": "scaleNodeVMCopy",
        "count": "[variables('instanceCount').frontend]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/availabilitySets/', 'availabilityset-sd')]",
        "[concat('Microsoft.Storage/storageAccounts/', concat(variables('storageAccountNames').frontend, variables('math').modulo2[copyIndex()]))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat('nic-sd-', copyIndex()))]"
      ],
      "properties": {
        "hardwareProfile": { "vmSize": "Standard_A0" },
        "networkProfile": { "networkInterfaces": [ { "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-sd-', copyIndex()))]" } ] },
        "availabilitySet": { "id": "[resourceId('Microsoft.Compute/availabilitySets', 'availabilityset-sd')]" },
        "osProfile": {
          "computerName": "[concat('sd-', copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat('fe-', copyIndex(), '-osdisk')]",
            "vhd": {
              "uri": "[concat('http://', concat(variables('storageAccountNames').frontend, variables('math').modulo2[copyIndex()]), '.blob.core.windows.net/', 'vhds', '/',  concat('fe', '-', copyIndex()), '-osdisk.vhd') ]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        }
      }
    },

    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "properties": { "accountType": "Standard_LRS" },
      "name": "[concat(variables('storageAccountNames').frontend, '0')]",
      "tags": { "displayName": "StorageAccount FrontEnd 0" }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "properties": { "accountType": "Standard_LRS" },
      "name": "[concat(variables('storageAccountNames').frontend, '1')]",
      "tags": { "displayName": "StorageAccount FrontEnd 1" }
    }
  ]
}
